name: Release Management

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Type of release'
        required: true
        default: 'patch'
        type: choice
        options: [patch, minor, major]

permissions:
  contents: write
  issues: write
  pull-requests: write

env:
  NODE_VERSION: '18'

jobs:
  release:
    runs-on: ubuntu-latest

    outputs:
      new_version: ${{ steps.bump_version.outputs.new_version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Bump version and generate changelog
        id: bump_version
        run: |
          case "${{ github.event.inputs.release_type }}" in
            major) npm version major --no-git-tag-version ;;
            minor) npm version minor --no-git-tag-version ;;
            patch) npm version patch --no-git-tag-version ;;
          esac
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "## Release v$NEW_VERSION" > CHANGELOG.md
          git log -n 10 --oneline >> CHANGELOG.md
          git add package.json CHANGELOG.md
          git commit -m "chore: release v$NEW_VERSION" || echo "No changes to commit"
          git tag v$NEW_VERSION
          git push origin main --tags

      - name: Run tests
        run: npm test || echo "No test script found"

      - name: Build
        run: npm run build || echo "No build script found"

      - name: Deploy to Firebase
        if: ${{ secrets.FIREBASE_TOKEN != '' }}
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          npm install -g firebase-tools
          firebase deploy --project ball-network-web --token "$FIREBASE_TOKEN"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.bump_version.outputs.new_version }}
          name: Release v${{ steps.bump_version.outputs.new_version }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
