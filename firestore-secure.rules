// Secure Firestore Rules using Firebase Custom Claims
// These rules prevent unauthorized access even if client-side code is compromised

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions to check user roles from custom claims
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function getUserRole() {
      return request.auth.token.role;
    }
    
    function hasRole(role) {
      return isAuthenticated() && getUserRole() == role;
    }
    
    function hasAnyRole(roles) {
      return isAuthenticated() && getUserRole() in roles;
    }
    
    function isAdmin() {
      return hasRole('admin');
    }
    
    function isCoach() {
      return hasAnyRole(['admin', 'coach']);
    }
    
    function isScout() {
      return hasAnyRole(['admin', 'coach', 'scout']);
    }
    
    function isPlayer() {
      return hasAnyRole(['admin', 'coach', 'scout', 'player']);
    }
    
    function isSelfOrAdmin(userId) {
      return isAuthenticated() && (request.auth.uid == userId || isAdmin());
    }
    
    // Users collection - secure user profiles
    match /users/{userId} {
      // Anyone can read basic public profile info
      allow read: if isAuthenticated();
      
      // Users can update their own profile, admins can update any
      allow write: if isSelfOrAdmin(userId);
      
      // Only admins can create user documents (done via Cloud Functions)
      allow create: if isAdmin();
    }
    
    // Players collection - player-specific data
    match /players/{playerId} {
      // Public read access for basic stats
      allow read: if true;
      
      // Players can update their own data, coaches and admins can update any
      allow write: if isSelfOrAdmin(playerId) || isCoach();
      
      // Coaches and admins can create player profiles
      allow create: if isCoach();
    }
    
    // Coaches collection - coach-specific data
    match /coaches/{coachId} {
      // Scouts and above can read coach data
      allow read: if isScout();
      
      // Coaches can update their own data, admins can update any
      allow write: if isSelfOrAdmin(coachId);
      
      // Only admins can create coach profiles
      allow create: if isAdmin();
    }
    
    // Scouts collection - scout-specific data
    match /scouts/{scoutId} {
      // Coaches and above can read scout data
      allow read: if isCoach();
      
      // Scouts can update their own data, admins can update any
      allow write: if isSelfOrAdmin(scoutId);
      
      // Only admins can create scout profiles
      allow create: if isAdmin();
    }
    
    // Admin collection - admin-only data
    match /admins/{adminId} {
      // Only admins can access admin data
      allow read, write: if isAdmin();
      allow create: if isAdmin();
    }
    
    // Games collection - game data
    match /games/{gameId} {
      // Anyone can read public game data
      allow read: if true;
      
      // Only coaches and above can write game data
      allow write: if isCoach();
      allow create: if isCoach();
    }
    
    // Teams collection - team data
    match /teams/{teamId} {
      // Anyone can read basic team info
      allow read: if true;
      
      // Only coaches of the team or admins can update
      allow write: if isCoach() || isAdmin();
      allow create: if isCoach();
    }
    
    // Statistics collection - player/team stats
    match /statistics/{statId} {
      // Public read for basic stats
      allow read: if true;
      
      // Only authenticated users with player role or above can write
      allow write: if isPlayer();
      allow create: if isPlayer();
    }
    
    // Role assignments collection - audit trail
    match /roleAssignments/{assignmentId} {
      // Only admins can read role assignment history
      allow read: if isAdmin();
      
      // Only Cloud Functions can write (no direct client access)
      allow write: if false;
    }
    
    // Permission checks collection - audit trail
    match /permissionChecks/{checkId} {
      // Only admins can read permission check history
      allow read: if isAdmin();
      
      // Only Cloud Functions can write (no direct client access)
      allow write: if false;
    }
    
    // Rosters collection - team rosters
    match /rosters/{rosterId} {
      // Coaches can read their own rosters, admins can read any
      allow read: if isCoach();
      
      // Only coaches can create/update rosters
      allow write: if isCoach();
      allow create: if isCoach();
    }
    
    // Invites collection - player invitations
    match /invites/{inviteId} {
      // Coaches can read their own invites
      allow read: if isCoach();
      
      // Only coaches can create invites
      allow write: if isCoach();
      allow create: if isCoach();
    }
    
    // Analytics collection - system analytics
    match /analytics/{analyticsId} {
      // Only admins can read analytics
      allow read: if isAdmin();
      
      // System can write analytics (via Cloud Functions)
      allow write: if false;
      allow create: if false;
    }
    
    // Public data that anyone can read
    match /public/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Settings collection - app configuration
    match /settings/{settingId} {
      // Anyone can read public settings
      allow read: if true;
      
      // Only admins can modify settings
      allow write: if isAdmin();
    }
    
    // Notifications collection - user notifications
    match /notifications/{notificationId} {
      // Users can read their own notifications
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      
      // System creates notifications, users can mark as read
      allow write: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
      
      // Only system (via Cloud Functions) can create notifications
      allow create: if isAdmin();
    }
    
    // Default: Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
