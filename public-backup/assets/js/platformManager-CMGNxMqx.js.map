{"version":3,"file":"platformManager-CMGNxMqx.js","sources":["../../../public/assets/js/platformManager.js"],"sourcesContent":["// Integrated Basketball Platform Manager\n// Connects all advanced features and manages data flow between modules\n\nclass BasketballPlatformManager {\n  constructor() {\n    this.modules = {};\n    this.sharedData = {\n      currentUser: null,\n      gameSession: null,\n      playerProfile: {},\n      teamData: {},\n      performanceMetrics: {},\n      socialConnections: [],\n    };\n    this.eventListeners = {};\n    this.initializeModules();\n    this.setupEventSystem();\n  }\n\n  // Initialize all platform modules\n  initializeModules() {\n    // Check if modules are available and initialize them\n    if (typeof PlayerAnalytics !== 'undefined') {\n      this.modules.analytics = new PlayerAnalytics();\n    }\n\n    if (typeof RecruitingHub !== 'undefined') {\n      this.modules.recruiting = new RecruitingHub();\n    }\n\n    if (typeof SmartGameInput !== 'undefined') {\n      this.modules.gameInput = new SmartGameInput();\n    }\n\n    this.setupModuleConnections();\n  }\n\n  // Setup connections between modules for data sharing\n  setupModuleConnections() {\n    // When game data is recorded, update analytics\n    if (this.modules.gameInput && this.modules.analytics) {\n      this.modules.gameInput.onStatRecorded = statData => {\n        this.modules.analytics.trackPerformance(statData);\n        this.updateSharedMetrics(statData);\n      };\n    }\n\n    // When analytics generate insights, update recruiting profile\n    if (this.modules.analytics && this.modules.recruiting) {\n      this.modules.analytics.onInsightGenerated = insight => {\n        this.modules.recruiting.updatePlayerMetrics(insight);\n        this.broadcastEvent('insight-generated', insight);\n      };\n    }\n  }\n\n  // Setup event system for cross-module communication\n  setupEventSystem() {\n    this.eventBus = {\n      listeners: {},\n      emit: (event, data) => {\n        if (this.eventBus.listeners[event]) {\n          this.eventBus.listeners[event].forEach(callback => callback(data));\n        }\n      },\n      on: (event, callback) => {\n        if (!this.eventBus.listeners[event]) {\n          this.eventBus.listeners[event] = [];\n        }\n        this.eventBus.listeners[event].push(callback);\n      },\n    };\n\n    // Setup default event handlers\n    this.setupDefaultEventHandlers();\n  }\n\n  setupDefaultEventHandlers() {\n    // Performance tracking events\n    this.eventBus.on('game-completed', gameData => {\n      this.processGameCompletion(gameData);\n    });\n\n    this.eventBus.on('achievement-unlocked', achievement => {\n      this.handleAchievementUnlock(achievement);\n    });\n\n    this.eventBus.on('recruiter-message', message => {\n      this.handleRecruiterCommunication(message);\n    });\n\n    this.eventBus.on('team-chemistry-update', data => {\n      this.updateTeamChemistry(data);\n    });\n  }\n\n  // Process completed game data across all modules\n  processGameCompletion(gameData) {\n    // Update analytics\n    if (this.modules.analytics) {\n      const performance = this.modules.analytics.trackPerformance(gameData);\n      this.sharedData.performanceMetrics = performance;\n    }\n\n    // Check for achievements\n    this.checkAchievements(gameData);\n\n    // Update recruiting profile\n    if (this.modules.recruiting) {\n      this.modules.recruiting.updatePlayerStats(gameData.stats);\n    }\n\n    // Update social feed\n    this.updateSocialFeed({\n      type: 'game-completed',\n      player: gameData.player,\n      stats: gameData.stats,\n      timestamp: new Date().toISOString(),\n    });\n\n    // Save to local storage\n    this.saveGameData(gameData);\n  }\n\n  // Achievement system\n  checkAchievements(gameData) {\n    const achievements = [\n      {\n        id: 'first-triple-double',\n        name: 'First Triple-Double',\n        check: stats =>\n          stats.points >= 10 && stats.rebounds >= 10 && stats.assists >= 10,\n      },\n      {\n        id: 'sharpshooter',\n        name: 'Sharpshooter',\n        check: stats => stats.tpm >= 10,\n      },\n      {\n        id: 'defensive-specialist',\n        name: 'Defensive Specialist',\n        check: stats => stats.steals >= 5 && stats.blocks >= 3,\n      },\n      {\n        id: 'lightning-fast',\n        name: 'Lightning Fast',\n        check: stats => stats.firstQuarterPoints >= 20,\n      },\n      {\n        id: 'clutch-player',\n        name: 'Clutch Player',\n        check: stats => stats.gameWinningShot === true,\n      },\n    ];\n\n    achievements.forEach(achievement => {\n      if (achievement.check(gameData.stats)) {\n        this.unlockAchievement(achievement);\n      }\n    });\n  }\n\n  unlockAchievement(achievement) {\n    const unlockedAchievements = this.getUnlockedAchievements();\n    if (!unlockedAchievements.includes(achievement.id)) {\n      unlockedAchievements.push(achievement.id);\n      localStorage.setItem(\n        'unlockedAchievements',\n        JSON.stringify(unlockedAchievements)\n      );\n\n      this.eventBus.emit('achievement-unlocked', achievement);\n      this.showAchievementNotification(achievement);\n    }\n  }\n\n  getUnlockedAchievements() {\n    const stored = localStorage.getItem('unlockedAchievements');\n    return stored ? JSON.parse(stored) : [];\n  }\n\n  showAchievementNotification(achievement) {\n    // Create notification element\n    const notification = document.createElement('div');\n    notification.className = 'achievement-notification';\n    notification.innerHTML = `\n      <div class=\"achievement-popup\">\n        <div class=\"achievement-icon\">üèÜ</div>\n        <div class=\"achievement-content\">\n          <h3>Achievement Unlocked!</h3>\n          <p>${achievement.name}</p>\n        </div>\n      </div>\n    `;\n\n    // Add styles\n    const styles = `\n      .achievement-notification {\n        position: fixed;\n        top: 20px;\n        right: 20px;\n        z-index: 10000;\n        animation: slideInRight 0.5s ease-out;\n      }\n      .achievement-popup {\n        background: linear-gradient(135deg, #ffd700, #ffed4e);\n        color: #333;\n        padding: 1em 1.5em;\n        border-radius: 12px;\n        box-shadow: 0 8px 32px rgba(255, 215, 0, 0.4);\n        display: flex;\n        align-items: center;\n        gap: 1em;\n        min-width: 300px;\n      }\n      .achievement-icon {\n        font-size: 2em;\n      }\n      .achievement-content h3 {\n        margin: 0;\n        font-size: 1.1em;\n        font-weight: 900;\n      }\n      .achievement-content p {\n        margin: 0.2em 0 0 0;\n        font-size: 0.9em;\n      }\n      @keyframes slideInRight {\n        from {\n          transform: translateX(100%);\n          opacity: 0;\n        }\n        to {\n          transform: translateX(0);\n          opacity: 1;\n        }\n      }\n    `;\n\n    // Add styles to head if not already present\n    if (!document.querySelector('#achievement-styles')) {\n      const styleSheet = document.createElement('style');\n      styleSheet.id = 'achievement-styles';\n      styleSheet.textContent = styles;\n      document.head.appendChild(styleSheet);\n    }\n\n    // Add to page\n    document.body.appendChild(notification);\n\n    // Remove after 5 seconds\n    setTimeout(() => {\n      notification.style.animation = 'slideInRight 0.5s ease-out reverse';\n      setTimeout(() => {\n        if (notification.parentNode) {\n          notification.parentNode.removeChild(notification);\n        }\n      }, 500);\n    }, 5000);\n  }\n\n  // Team chemistry analysis\n  updateTeamChemistry(data) {\n    const chemistry = {\n      overall: this.calculateTeamChemistry(data),\n      connections: this.analyzePlayerConnections(data),\n      recommendations: this.generateChemistryRecommendations(data),\n    };\n\n    this.sharedData.teamData.chemistry = chemistry;\n    this.eventBus.emit('chemistry-updated', chemistry);\n  }\n\n  calculateTeamChemistry(data) {\n    // Analyze team performance metrics\n    const factors = {\n      communication: data.communicationEvents || 0,\n      assists: data.totalAssists || 0,\n      turnovers: data.totalTurnovers || 0,\n      winRate: data.winRate || 0,\n    };\n\n    const communicationScore = Math.min(\n      (factors.communication / 50) * 100,\n      100\n    );\n    const playingScore = Math.max(\n      0,\n      100 - (factors.turnovers / factors.assists) * 20\n    );\n    const winScore = factors.winRate * 100;\n\n    return Math.round((communicationScore + playingScore + winScore) / 3);\n  }\n\n  analyzePlayerConnections(data) {\n    // Analyze player-to-player connections based on performance\n    const connections = {};\n\n    if (data.playerStats) {\n      Object.keys(data.playerStats).forEach(player1 => {\n        connections[player1] = {};\n        Object.keys(data.playerStats).forEach(player2 => {\n          if (player1 !== player2) {\n            connections[player1][player2] = this.calculateConnectionStrength(\n              data.playerStats[player1],\n              data.playerStats[player2]\n            );\n          }\n        });\n      });\n    }\n\n    return connections;\n  }\n\n  calculateConnectionStrength(player1Stats, player2Stats) {\n    // Calculate connection strength based on assist-to-turnover ratios when playing together\n    const assistRatio =\n      (player1Stats.assistsToPlayer2 || 0) /\n      Math.max(player1Stats.totalAssists || 1, 1);\n    const turnoverRate =\n      (player1Stats.turnoversWithPlayer2 || 0) /\n      Math.max(player1Stats.totalTurnovers || 1, 1);\n\n    const strength = assistRatio * 100 - turnoverRate * 50;\n\n    if (strength >= 70) return 'high';\n    if (strength >= 40) return 'medium';\n    return 'low';\n  }\n\n  generateChemistryRecommendations(data) {\n    const recommendations = [];\n\n    if (data.communicationScore < 70) {\n      recommendations.push('Focus on defensive communication drills');\n    }\n\n    if (data.assistToTurnoverRatio < 1.5) {\n      recommendations.push('Practice ball movement and decision-making');\n    }\n\n    if (data.benchChemistry < data.starterChemistry) {\n      recommendations.push('Organize team bonding activities for all players');\n    }\n\n    return recommendations;\n  }\n\n  // Recruiting system integration\n  handleRecruiterCommunication(message) {\n    // Process incoming recruiter messages\n    const communication = {\n      id: Date.now(),\n      recruiter: message.recruiter,\n      college: message.college,\n      message: message.content,\n      timestamp: new Date().toISOString(),\n      status: 'unread',\n    };\n\n    this.addRecruiterMessage(communication);\n    this.showRecruiterNotification(communication);\n  }\n\n  addRecruiterMessage(communication) {\n    const messages = this.getRecruiterMessages();\n    messages.unshift(communication);\n    localStorage.setItem('recruiterMessages', JSON.stringify(messages));\n  }\n\n  getRecruiterMessages() {\n    const stored = localStorage.getItem('recruiterMessages');\n    return stored ? JSON.parse(stored) : [];\n  }\n\n  showRecruiterNotification(communication) {\n    // Similar to achievement notification but for recruiter messages\n    console.log('New recruiter message:', communication);\n  }\n\n  // Social feed management\n  updateSocialFeed(activity) {\n    const feed = this.getSocialFeed();\n    feed.unshift({\n      ...activity,\n      id: Date.now(),\n      timestamp: activity.timestamp || new Date().toISOString(),\n    });\n\n    // Keep only latest 100 items\n    if (feed.length > 100) {\n      feed.splice(100);\n    }\n\n    localStorage.setItem('socialFeed', JSON.stringify(feed));\n    this.eventBus.emit('social-feed-updated', feed);\n  }\n\n  getSocialFeed() {\n    const stored = localStorage.getItem('socialFeed');\n    return stored ? JSON.parse(stored) : [];\n  }\n\n  // Data persistence\n  saveGameData(gameData) {\n    const allGames = this.getAllGameData();\n    allGames.unshift(gameData);\n\n    // Keep only latest 50 games\n    if (allGames.length > 50) {\n      allGames.splice(50);\n    }\n\n    localStorage.setItem('gameHistory', JSON.stringify(allGames));\n  }\n\n  getAllGameData() {\n    const stored = localStorage.getItem('gameHistory');\n    return stored ? JSON.parse(stored) : [];\n  }\n\n  // Public API methods\n  broadcastEvent(eventName, data) {\n    this.eventBus.emit(eventName, data);\n  }\n\n  addEventListener(eventName, callback) {\n    this.eventBus.on(eventName, callback);\n  }\n\n  updateSharedMetrics(data) {\n    this.sharedData.performanceMetrics = {\n      ...this.sharedData.performanceMetrics,\n      ...data,\n      lastUpdated: new Date().toISOString(),\n    };\n  }\n\n  getSharedData() {\n    return this.sharedData;\n  }\n\n  // AI coaching integration\n  generateCoachingInsight(performanceData) {\n    const insights = {\n      strengths: [],\n      weaknesses: [],\n      recommendations: [],\n    };\n\n    // Analyze shooting\n    if (performanceData.fgPercentage > 50) {\n      insights.strengths.push('Excellent shooting efficiency');\n    } else if (performanceData.fgPercentage < 40) {\n      insights.weaknesses.push('Shooting consistency needs improvement');\n      insights.recommendations.push(\n        'Focus on form shooting drills and shot selection'\n      );\n    }\n\n    // Analyze playmaking\n    if (performanceData.assistToTurnoverRatio > 2) {\n      insights.strengths.push('Great ball security and playmaking');\n    } else if (performanceData.assistToTurnoverRatio < 1) {\n      insights.weaknesses.push('High turnover rate affecting team flow');\n      insights.recommendations.push('Practice decision-making under pressure');\n    }\n\n    return insights;\n  }\n\n  // Performance prediction\n  predictPerformance(upcomingOpponent) {\n    const historicalData = this.getAllGameData();\n    const playerStats = this.sharedData.performanceMetrics;\n\n    // Simple prediction based on historical performance vs similar opponents\n    const prediction = {\n      expectedPoints: playerStats.averagePoints || 0,\n      expectedAssists: playerStats.averageAssists || 0,\n      expectedRebounds: playerStats.averageRebounds || 0,\n      confidence: 0.75,\n    };\n\n    // Adjust based on opponent strength\n    if (upcomingOpponent.defensiveRating > 110) {\n      prediction.expectedPoints *= 0.9;\n      prediction.confidence *= 0.9;\n    }\n\n    return prediction;\n  }\n}\n\n// Export for ES modules\nexport { BasketballPlatformManager as PlatformManager };\n\n// Global platform manager instance\nlet platformManager;\n\n// Initialize when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformManager = new BasketballPlatformManager();\n\n  // Make available globally for other modules\n  window.BasketballPlatform = platformManager;\n  window.PlatformManager = BasketballPlatformManager;\n});\n\n// Also support CommonJS for backward compatibility\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = BasketballPlatformManager;\n}\n"],"names":["BasketballPlatformManager","statData","insight","event","data","callback","gameData","achievement","message","performance","stats","unlockedAchievements","stored","notification","styles","styleSheet","chemistry","factors","communicationScore","playingScore","winScore","connections","player1","player2","player1Stats","player2Stats","assistRatio","turnoverRate","strength","recommendations","communication","messages","activity","feed","allGames","eventName","performanceData","insights","upcomingOpponent","playerStats","prediction","platformManager"],"mappings":"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"}