{"version":3,"file":"recruitingHub-B00FkBgR.js","sources":["../../../public/assets/js/recruitingHub.js"],"sourcesContent":["// Smart Recruiting Hub - College Match Algorithm & Communication Center\n// Connects players with college opportunities based on comprehensive data\n\nclass RecruitingHub {\n  constructor() {\n    this.collegeDatabase = [];\n    this.playerProfiles = new Map();\n    this.matchAlgorithm = new CollegeMatchAlgorithm();\n    this.communicationCenter = new RecruiterCommunication();\n    this.scholarshipCalculator = new ScholarshipCalculator();\n  }\n\n  // Initialize with college database\n  async initializeCollegeData() {\n    // Sample college data - in production, this would be a comprehensive database\n    this.collegeDatabase = [\n      {\n        id: 'duke_university',\n        name: 'Duke University',\n        conference: 'ACC',\n        division: 'D1',\n        location: 'Durham, NC',\n        requirements: {\n          minGPA: 3.5,\n          minSAT: 1400,\n          minACT: 32,\n          minHeight: { PG: \"5'10\", SG: \"6'2\", SF: \"6'5\", PF: \"6'7\", C: \"6'9\" },\n        },\n        recruiting: {\n          positions: ['PG', 'SG', 'SF'],\n          style: 'fast_paced',\n          priorities: ['basketball_iq', 'athleticism', 'academics'],\n          scholarshipsAvailable: 2,\n        },\n        stats: {\n          averageStats: {\n            PG: { points: 18.5, assists: 6.2, rebounds: 4.1 },\n            SG: { points: 16.8, assists: 3.1, rebounds: 5.2 },\n            SF: { points: 15.2, assists: 4.1, rebounds: 6.8 },\n          },\n          winRate: 0.85,\n          nbaProspects: 0.15,\n        },\n      },\n      {\n        id: 'university_california',\n        name: 'University of California',\n        conference: 'Pac-12',\n        division: 'D1',\n        location: 'Berkeley, CA',\n        requirements: {\n          minGPA: 3.2,\n          minSAT: 1200,\n          minACT: 26,\n          minHeight: { PG: \"5'8\", SG: \"6'0\", SF: \"6'3\", PF: \"6'5\", C: \"6'7\" },\n        },\n        recruiting: {\n          positions: ['PG', 'SF', 'PF'],\n          style: 'balanced',\n          priorities: ['leadership', 'versatility', 'academics'],\n          scholarshipsAvailable: 3,\n        },\n      },\n      {\n        id: 'arizona_state',\n        name: 'Arizona State University',\n        conference: 'Pac-12',\n        division: 'D1',\n        location: 'Tempe, AZ',\n        requirements: {\n          minGPA: 2.8,\n          minSAT: 1100,\n          minACT: 24,\n          minHeight: { PG: \"5'9\", SG: \"6'1\", SF: \"6'4\", PF: \"6'6\", C: \"6'8\" },\n        },\n        recruiting: {\n          positions: ['SG', 'SF', 'PF'],\n          style: 'athletic',\n          priorities: ['athleticism', 'potential', 'character'],\n          scholarshipsAvailable: 4,\n        },\n      },\n    ];\n  }\n\n  // Create comprehensive player profile\n  createPlayerProfile(playerData) {\n    const profile = {\n      id: playerData.id,\n      personal: {\n        name: playerData.name,\n        position: playerData.position,\n        height: playerData.height,\n        weight: playerData.weight,\n        birthDate: playerData.birthDate,\n        location: playerData.location,\n      },\n      academic: {\n        gpa: playerData.gpa,\n        sat: playerData.sat,\n        act: playerData.act,\n        classRank: playerData.classRank,\n        coursework: playerData.coursework || [],\n      },\n      basketball: {\n        stats: playerData.stats,\n        highlights: playerData.highlights || [],\n        awards: playerData.awards || [],\n        teamSuccess: playerData.teamSuccess || {},\n        coachRecommendations: playerData.coachRecommendations || [],\n      },\n      preferences: {\n        preferredDivisions: playerData.preferences?.divisions || ['D1', 'D2'],\n        preferredConferences: playerData.preferences?.conferences || [],\n        locationPreferences: playerData.preferences?.location || 'any',\n        academicFocus: playerData.preferences?.academics || 'balanced',\n        playingTimeImportance: playerData.preferences?.playingTime || 'medium',\n      },\n      recruiting: {\n        status: 'active',\n        interests: [],\n        communications: [],\n        visits: [],\n        offers: [],\n      },\n    };\n\n    this.playerProfiles.set(playerData.id, profile);\n    return profile;\n  }\n\n  // Find college matches using AI algorithm\n  findCollegeMatches(playerId) {\n    const player = this.playerProfiles.get(playerId);\n    if (!player) return [];\n\n    const matches = this.collegeDatabase.map(college => {\n      const compatibility = this.matchAlgorithm.calculateCompatibility(\n        player,\n        college\n      );\n      return {\n        college,\n        compatibility,\n        reasoning: this.matchAlgorithm.getReasoningDetails(\n          player,\n          college,\n          compatibility\n        ),\n      };\n    });\n\n    // Sort by compatibility score and return top matches\n    return matches\n      .sort((a, b) => b.compatibility.overall - a.compatibility.overall)\n      .slice(0, 10);\n  }\n\n  // Calculate scholarship probability\n  calculateScholarshipProbability(playerId, collegeId) {\n    const player = this.playerProfiles.get(playerId);\n    const college = this.collegeDatabase.find(c => c.id === collegeId);\n\n    if (!player || !college) return 0;\n\n    return this.scholarshipCalculator.calculate(player, college);\n  }\n\n  // Communication center methods\n  sendMessageToRecruiter(playerId, collegeId, message) {\n    return this.communicationCenter.sendMessage(playerId, collegeId, message);\n  }\n\n  getRecruiterMessages(playerId) {\n    return this.communicationCenter.getMessages(playerId);\n  }\n\n  // Highlight reel builder\n  buildHighlightReel(playerId, clips) {\n    const player = this.playerProfiles.get(playerId);\n    if (!player) return null;\n\n    const highlightReel = {\n      playerId,\n      playerName: player.personal.name,\n      position: player.personal.position,\n      clips: clips.map(clip => ({\n        id: clip.id,\n        title: clip.title,\n        description: clip.description,\n        videoUrl: clip.videoUrl,\n        gameDate: clip.gameDate,\n        opponent: clip.opponent,\n        stats: clip.stats,\n        tags: this.generateClipTags(clip),\n      })),\n      summary: this.generateReelSummary(player, clips),\n      createdAt: new Date().toISOString(),\n    };\n\n    return highlightReel;\n  }\n\n  generateClipTags(clip) {\n    const tags = [];\n\n    if (clip.stats?.points >= 20) tags.push('scoring');\n    if (clip.stats?.assists >= 8) tags.push('playmaking');\n    if (clip.stats?.rebounds >= 10) tags.push('rebounding');\n    if (clip.stats?.steals >= 4) tags.push('defense');\n    if (clip.description?.includes('clutch')) tags.push('clutch');\n    if (clip.description?.includes('leadership')) tags.push('leadership');\n\n    return tags;\n  }\n\n  generateReelSummary(player, clips) {\n    const totalStats = clips.reduce(\n      (sum, clip) => ({\n        points: (sum.points || 0) + (clip.stats?.points || 0),\n        assists: (sum.assists || 0) + (clip.stats?.assists || 0),\n        rebounds: (sum.rebounds || 0) + (clip.stats?.rebounds || 0),\n      }),\n      {}\n    );\n\n    return {\n      playerOverview: `${player.personal.position} • ${player.personal.height} • ${player.academic.gpa} GPA`,\n      highlightStats: `${Math.round(totalStats.points / clips.length)} PPG, ${Math.round(totalStats.assists / clips.length)} APG, ${Math.round(totalStats.rebounds / clips.length)} RPG`,\n      keyStrengths: this.identifyKeyStrengths(player, clips),\n      videoCount: clips.length,\n      totalDuration: clips.reduce(\n        (sum, clip) => sum + (clip.duration || 30),\n        0\n      ),\n    };\n  }\n\n  identifyKeyStrengths(player, clips) {\n    const strengths = [];\n    const avgStats = player.basketball.stats;\n\n    if (avgStats.assists >= 6) strengths.push('Elite Playmaker');\n    if (avgStats.points >= 18) strengths.push('Prolific Scorer');\n    if (avgStats.steals >= 2) strengths.push('Defensive Disruptor');\n    if (player.academic.gpa >= 3.5) strengths.push('Academic Excellence');\n    if (player.basketball.awards?.length > 0) strengths.push('Proven Winner');\n\n    return strengths.slice(0, 3);\n  }\n}\n\n// College Match Algorithm\nclass CollegeMatchAlgorithm {\n  calculateCompatibility(player, college) {\n    const scores = {\n      academic: this.calculateAcademicFit(player, college),\n      athletic: this.calculateAthleticFit(player, college),\n      cultural: this.calculateCulturalFit(player, college),\n      opportunity: this.calculateOpportunityFit(player, college),\n    };\n\n    // Weighted overall score\n    const overall =\n      scores.academic * 0.3 +\n      scores.athletic * 0.4 +\n      scores.cultural * 0.2 +\n      scores.opportunity * 0.1;\n\n    return {\n      overall: Math.round(overall),\n      academic: Math.round(scores.academic),\n      athletic: Math.round(scores.athletic),\n      cultural: Math.round(scores.cultural),\n      opportunity: Math.round(scores.opportunity),\n    };\n  }\n\n  calculateAcademicFit(player, college) {\n    let score = 0;\n\n    // GPA comparison\n    if (player.academic.gpa >= college.requirements.minGPA + 0.5) score += 40;\n    else if (player.academic.gpa >= college.requirements.minGPA) score += 25;\n    else score += 10;\n\n    // Test scores\n    if (player.academic.sat >= college.requirements.minSAT + 100) score += 30;\n    else if (player.academic.sat >= college.requirements.minSAT) score += 20;\n    else score += 5;\n\n    // Class rank bonus\n    if (player.academic.classRank && player.academic.classRank <= 10)\n      score += 30;\n\n    return Math.min(100, score);\n  }\n\n  calculateAthleticFit(player, college) {\n    let score = 0;\n    const playerPos = player.personal.position;\n    const playerStats = player.basketball.stats;\n\n    // Position need\n    if (college.recruiting.positions.includes(playerPos)) score += 30;\n\n    // Stats comparison with college averages\n    const collegeAvg = college.stats?.averageStats?.[playerPos];\n    if (collegeAvg) {\n      if (playerStats.points >= collegeAvg.points * 0.8) score += 25;\n      if (playerStats.assists >= collegeAvg.assists * 0.8) score += 25;\n      if (playerStats.rebounds >= collegeAvg.rebounds * 0.8) score += 20;\n    }\n\n    return Math.min(100, score);\n  }\n\n  calculateCulturalFit(player, college) {\n    let score = 50; // Base score\n\n    // Location preference\n    if (player.preferences.locationPreferences !== 'any') {\n      const playerRegion = this.getRegion(player.personal.location);\n      const collegeRegion = this.getRegion(college.location);\n      if (playerRegion === collegeRegion) score += 25;\n    }\n\n    // Academic focus alignment\n    if (\n      player.preferences.academicFocus === 'high' &&\n      college.requirements.minGPA >= 3.5\n    ) {\n      score += 25;\n    }\n\n    return Math.min(100, score);\n  }\n\n  calculateOpportunityFit(player, college) {\n    let score = 0;\n\n    // Scholarship availability\n    if (college.recruiting.scholarshipsAvailable > 0) score += 40;\n\n    // Playing time opportunity\n    if (player.preferences.playingTimeImportance === 'high') {\n      if (college.recruiting.scholarshipsAvailable >= 2) score += 30;\n    }\n\n    // Conference strength vs player level\n    const conferenceStrength = this.getConferenceStrength(college.conference);\n    if (conferenceStrength === 'high' && player.basketball.stats.points >= 15)\n      score += 30;\n\n    return Math.min(100, score);\n  }\n\n  getRegion(location) {\n    const stateRegions = {\n      CA: 'West',\n      OR: 'West',\n      WA: 'West',\n      NV: 'West',\n      AZ: 'West',\n      TX: 'South',\n      FL: 'South',\n      GA: 'South',\n      NC: 'South',\n      SC: 'South',\n      NY: 'Northeast',\n      MA: 'Northeast',\n      CT: 'Northeast',\n      NJ: 'Northeast',\n      IL: 'Midwest',\n      OH: 'Midwest',\n      MI: 'Midwest',\n      IN: 'Midwest',\n    };\n\n    const state = location.split(', ').pop();\n    return stateRegions[state] || 'Other';\n  }\n\n  getConferenceStrength(conference) {\n    const strongConferences = ['ACC', 'Big Ten', 'Big 12', 'SEC', 'Pac-12'];\n    return strongConferences.includes(conference) ? 'high' : 'medium';\n  }\n\n  getReasoningDetails(player, college, compatibility) {\n    const details = [];\n\n    if (compatibility.academic >= 80) {\n      details.push('Strong academic profile matches school standards');\n    } else if (compatibility.academic < 50) {\n      details.push('Academic credentials may need improvement');\n    }\n\n    if (compatibility.athletic >= 80) {\n      details.push('Stats indicate strong fit for program level');\n    }\n\n    if (college.recruiting.positions.includes(player.personal.position)) {\n      details.push(`Program actively recruiting ${player.personal.position}s`);\n    }\n\n    if (college.recruiting.scholarshipsAvailable > 0) {\n      details.push(\n        `${college.recruiting.scholarshipsAvailable} scholarships potentially available`\n      );\n    }\n\n    return details;\n  }\n}\n\n// Scholarship Probability Calculator\nclass ScholarshipCalculator {\n  calculate(player, college) {\n    let probability = 0;\n\n    // Base probability from academic fit\n    if (player.academic.gpa >= college.requirements.minGPA + 0.5)\n      probability += 30;\n    else if (player.academic.gpa >= college.requirements.minGPA)\n      probability += 15;\n\n    // Athletic performance\n    const playerStats = player.basketball.stats;\n    if (playerStats.points >= 15) probability += 25;\n    if (playerStats.assists >= 5) probability += 15;\n    if (playerStats.rebounds >= 6) probability += 10;\n\n    // Position need\n    if (college.recruiting.positions.includes(player.personal.position)) {\n      probability += 20;\n    }\n\n    // Scholarship availability\n    if (college.recruiting.scholarshipsAvailable > 0) {\n      probability += 15;\n    }\n\n    // Awards and recognition\n    if (player.basketball.awards?.length > 0) {\n      probability += 10;\n    }\n\n    return Math.min(95, Math.max(5, probability));\n  }\n}\n\n// Recruiter Communication Center\nclass RecruiterCommunication {\n  constructor() {\n    this.messages = new Map();\n    this.conversations = new Map();\n  }\n\n  sendMessage(playerId, collegeId, messageData) {\n    const messageId = this.generateMessageId();\n    const message = {\n      id: messageId,\n      playerId,\n      collegeId,\n      type: messageData.type || 'message',\n      subject: messageData.subject,\n      content: messageData.content,\n      timestamp: new Date().toISOString(),\n      status: 'sent',\n      attachments: messageData.attachments || [],\n    };\n\n    if (!this.messages.has(playerId)) {\n      this.messages.set(playerId, []);\n    }\n\n    this.messages.get(playerId).push(message);\n    return message;\n  }\n\n  getMessages(playerId) {\n    return this.messages.get(playerId) || [];\n  }\n\n  generateMessageId() {\n    return 'msg_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n  }\n}\n\n// Export for ES modules\nexport {\n  RecruitingHub,\n  CollegeMatchAlgorithm,\n  ScholarshipCalculator,\n  RecruiterCommunication,\n};\n\n// Also make available globally for backward compatibility\nif (typeof window !== 'undefined') {\n  window.RecruitingHub = RecruitingHub;\n  window.CollegeMatchAlgorithm = CollegeMatchAlgorithm;\n  window.ScholarshipCalculator = ScholarshipCalculator;\n  window.RecruiterCommunication = RecruiterCommunication;\n}\n"],"names":["RecruitingHub","CollegeMatchAlgorithm","RecruiterCommunication","ScholarshipCalculator","playerData","profile","playerId","player","college","compatibility","a","b","collegeId","c","message","clips","clip","tags","totalStats","sum","strengths","avgStats","scores","overall","score","playerPos","playerStats","collegeAvg","playerRegion","collegeRegion","location","stateRegions","state","conference","details","probability","messageData"],"mappings":"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"}