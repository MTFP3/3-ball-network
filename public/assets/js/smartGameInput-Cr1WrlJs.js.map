{"version":3,"file":"smartGameInput-Cr1WrlJs.js","sources":["../../../public/assets/js/smartGameInput.js"],"sourcesContent":["// Smart Game Input System\n// Voice commands, quick-tap interface, and real-time game tracking\n\nclass SmartGameInput {\n  constructor() {\n    this.gameSession = null;\n    this.voiceRecognition = null;\n    this.isRecording = false;\n    this.currentPlayer = null;\n    this.quickStats = {\n      points: 0,\n      rebounds: 0,\n      assists: 0,\n      steals: 0,\n      blocks: 0,\n      turnovers: 0,\n      fouls: 0,\n      fgm: 0,\n      fga: 0,\n      ftm: 0,\n      fta: 0,\n    };\n    this.gameEvents = [];\n    this.initializeVoiceRecognition();\n  }\n\n  // Initialize voice recognition\n  initializeVoiceRecognition() {\n    if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {\n      const SpeechRecognition =\n        window.SpeechRecognition || window.webkitSpeechRecognition;\n      this.voiceRecognition = new SpeechRecognition();\n      this.voiceRecognition.continuous = true;\n      this.voiceRecognition.interimResults = true;\n      this.voiceRecognition.lang = 'en-US';\n\n      this.voiceRecognition.onresult = event => {\n        this.handleVoiceResult(event);\n      };\n\n      this.voiceRecognition.onerror = event => {\n        console.error('Voice recognition error:', event.error);\n      };\n    }\n  }\n\n  // Start new game session\n  startGameSession(gameInfo) {\n    this.gameSession = {\n      id: this.generateGameId(),\n      homeTeam: gameInfo.homeTeam,\n      awayTeam: gameInfo.awayTeam,\n      playerTeam: gameInfo.playerTeam,\n      opponent: gameInfo.opponent,\n      date: new Date().toISOString(),\n      quarter: 1,\n      timeRemaining: '12:00',\n      homeScore: 0,\n      awayScore: 0,\n      players: gameInfo.players || [],\n      events: [],\n      isLive: true,\n    };\n\n    this.gameEvents = [];\n    this.resetQuickStats();\n\n    return this.gameSession;\n  }\n\n  // Voice command processing\n  startVoiceInput() {\n    if (this.voiceRecognition && !this.isRecording) {\n      this.voiceRecognition.start();\n      this.isRecording = true;\n      this.showVoiceIndicator();\n    }\n  }\n\n  stopVoiceInput() {\n    if (this.voiceRecognition && this.isRecording) {\n      this.voiceRecognition.stop();\n      this.isRecording = false;\n      this.hideVoiceIndicator();\n    }\n  }\n\n  handleVoiceResult(event) {\n    const results = event.results;\n    const lastResult = results[results.length - 1];\n\n    if (lastResult.isFinal) {\n      const transcript = lastResult[0].transcript.toLowerCase().trim();\n      this.processVoiceCommand(transcript);\n    }\n  }\n\n  processVoiceCommand(command) {\n    const patterns = {\n      // Scoring patterns\n      score:\n        /(\\w+)\\s+(made|scored|hit)\\s+(?:a\\s+)?(three|2|two|free throw|layup|dunk)/i,\n      miss: /(\\w+)\\s+(missed|miss)\\s+(?:a\\s+)?(three|2|two|free throw|layup|shot)/i,\n\n      // Assists\n      assist:\n        /(\\w+)\\s+(?:to\\s+)?(\\w+)\\s+(?:for\\s+(?:a\\s+)?)?(three|2|two|score|basket)/i,\n\n      // Rebounds\n      rebound: /(\\w+)\\s+(rebound|board|got the rebound)/i,\n\n      // Defensive stats\n      steal: /(\\w+)\\s+(steal|stole|picked off)/i,\n      block: /(\\w+)\\s+(block|blocked|swat)/i,\n\n      // Turnovers\n      turnover: /(\\w+)\\s+(turnover|lost the ball|travel|double dribble)/i,\n\n      // Fouls\n      foul: /(\\w+)\\s+(foul|fouled)/i,\n\n      // Game management\n      timeout: /(timeout|time out)/i,\n      quarter: /(end of quarter|quarter|period)/i,\n      substitution: /(\\w+)\\s+(?:in|out)\\s+for\\s+(\\w+)/i,\n    };\n\n    let processed = false;\n\n    for (const [type, pattern] of Object.entries(patterns)) {\n      const match = command.match(pattern);\n      if (match) {\n        this.executeVoiceCommand(type, match);\n        processed = true;\n        break;\n      }\n    }\n\n    if (!processed) {\n      this.showVoiceError(`Command not recognized: \"${command}\"`);\n    }\n  }\n\n  executeVoiceCommand(type, match) {\n    const playerName = match[1];\n    const player = this.findPlayer(playerName);\n\n    if (!player && type !== 'timeout' && type !== 'quarter') {\n      this.showVoiceError(`Player \"${playerName}\" not found`);\n      return;\n    }\n\n    const event = {\n      id: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      quarter: this.gameSession.quarter,\n      player: player,\n      type: type,\n      description: match[0],\n      processed: true,\n    };\n\n    switch (type) {\n      case 'score':\n        this.processScore(event, match[3]);\n        break;\n      case 'miss':\n        this.processMiss(event, match[3]);\n        break;\n      case 'assist':\n        this.processAssist(event, match[2], match[3]);\n        break;\n      case 'rebound':\n        this.processRebound(event);\n        break;\n      case 'steal':\n        this.processSteal(event);\n        break;\n      case 'block':\n        this.processBlock(event);\n        break;\n      case 'turnover':\n        this.processTurnover(event);\n        break;\n      case 'foul':\n        this.processFoul(event);\n        break;\n    }\n\n    this.gameEvents.push(event);\n    this.updateGameDisplay();\n    this.showVoiceConfirmation(event);\n  }\n\n  // Process different event types\n  processScore(event, shotType) {\n    const points = this.getPointsFromShotType(shotType);\n    event.points = points;\n    event.shotType = shotType;\n\n    if (this.currentPlayer === event.player?.id) {\n      this.quickStats.points += points;\n      this.quickStats.fgm += 1;\n      this.quickStats.fga += 1;\n    }\n\n    this.updateScore(points);\n  }\n\n  processMiss(event, shotType) {\n    event.shotType = shotType;\n    event.points = 0;\n\n    if (this.currentPlayer === event.player?.id) {\n      this.quickStats.fga += 1;\n    }\n  }\n\n  processAssist(event, assistedPlayer, shotType) {\n    const points = this.getPointsFromShotType(shotType);\n    event.assistedPlayer = this.findPlayer(assistedPlayer);\n    event.points = points;\n\n    if (this.currentPlayer === event.player?.id) {\n      this.quickStats.assists += 1;\n    }\n  }\n\n  processRebound(event) {\n    if (this.currentPlayer === event.player?.id) {\n      this.quickStats.rebounds += 1;\n    }\n  }\n\n  processSteal(event) {\n    if (this.currentPlayer === event.player?.id) {\n      this.quickStats.steals += 1;\n    }\n  }\n\n  processBlock(event) {\n    if (this.currentPlayer === event.player?.id) {\n      this.quickStats.blocks += 1;\n    }\n  }\n\n  processTurnover(event) {\n    if (this.currentPlayer === event.player?.id) {\n      this.quickStats.turnovers += 1;\n    }\n  }\n\n  processFoul(event) {\n    if (this.currentPlayer === event.player?.id) {\n      this.quickStats.fouls += 1;\n    }\n  }\n\n  // Quick-tap interface methods\n  quickTapScore(points, shotType = '2') {\n    const event = {\n      id: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      quarter: this.gameSession.quarter,\n      player: this.getCurrentPlayer(),\n      type: 'score',\n      points: points,\n      shotType: shotType,\n      method: 'quick_tap',\n    };\n\n    this.quickStats.points += points;\n    this.quickStats.fgm += 1;\n    this.quickStats.fga += 1;\n\n    this.gameEvents.push(event);\n    this.updateScore(points);\n    this.updateGameDisplay();\n    this.showQuickTapFeedback(`+${points} points`);\n  }\n\n  quickTapMiss(shotType = '2') {\n    const event = {\n      id: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      quarter: this.gameSession.quarter,\n      player: this.getCurrentPlayer(),\n      type: 'miss',\n      points: 0,\n      shotType: shotType,\n      method: 'quick_tap',\n    };\n\n    this.quickStats.fga += 1;\n    this.gameEvents.push(event);\n    this.updateGameDisplay();\n    this.showQuickTapFeedback('Miss recorded');\n  }\n\n  quickTapAssist() {\n    this.quickStats.assists += 1;\n    this.addQuickEvent('assist');\n    this.showQuickTapFeedback('+1 Assist');\n  }\n\n  quickTapRebound() {\n    this.quickStats.rebounds += 1;\n    this.addQuickEvent('rebound');\n    this.showQuickTapFeedback('+1 Rebound');\n  }\n\n  quickTapSteal() {\n    this.quickStats.steals += 1;\n    this.addQuickEvent('steal');\n    this.showQuickTapFeedback('+1 Steal');\n  }\n\n  quickTapBlock() {\n    this.quickStats.blocks += 1;\n    this.addQuickEvent('block');\n    this.showQuickTapFeedback('+1 Block');\n  }\n\n  quickTapTurnover() {\n    this.quickStats.turnovers += 1;\n    this.addQuickEvent('turnover');\n    this.showQuickTapFeedback('+1 Turnover');\n  }\n\n  quickTapFoul() {\n    this.quickStats.fouls += 1;\n    this.addQuickEvent('foul');\n    this.showQuickTapFeedback('+1 Foul');\n  }\n\n  // Helper methods\n  addQuickEvent(type) {\n    const event = {\n      id: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      quarter: this.gameSession.quarter,\n      player: this.getCurrentPlayer(),\n      type: type,\n      method: 'quick_tap',\n    };\n\n    this.gameEvents.push(event);\n    this.updateGameDisplay();\n  }\n\n  findPlayer(playerName) {\n    if (!this.gameSession?.players) return null;\n\n    return this.gameSession.players.find(\n      player =>\n        player.name.toLowerCase().includes(playerName.toLowerCase()) ||\n        player.firstName?.toLowerCase().includes(playerName.toLowerCase()) ||\n        player.lastName?.toLowerCase().includes(playerName.toLowerCase())\n    );\n  }\n\n  getCurrentPlayer() {\n    return (\n      this.gameSession?.players?.find(p => p.id === this.currentPlayer) || {\n        id: this.currentPlayer,\n        name: 'Current Player',\n      }\n    );\n  }\n\n  getPointsFromShotType(shotType) {\n    const type = shotType.toLowerCase();\n    if (type.includes('three') || type.includes('3')) return 3;\n    if (type.includes('free')) return 1;\n    return 2;\n  }\n\n  updateScore(points) {\n    if (this.gameSession) {\n      if (this.gameSession.playerTeam === 'home') {\n        this.gameSession.homeScore += points;\n      } else {\n        this.gameSession.awayScore += points;\n      }\n    }\n  }\n\n  // UI feedback methods\n  showVoiceIndicator() {\n    // Show visual indicator that voice is listening\n    this.updateUIElement('voice-indicator', {\n      active: true,\n      text: 'Listening...',\n    });\n  }\n\n  hideVoiceIndicator() {\n    this.updateUIElement('voice-indicator', { active: false, text: '' });\n  }\n\n  showVoiceConfirmation(event) {\n    const message = this.formatEventMessage(event);\n    this.updateUIElement('voice-feedback', {\n      type: 'success',\n      message: message,\n      timeout: 3000,\n    });\n  }\n\n  showVoiceError(message) {\n    this.updateUIElement('voice-feedback', {\n      type: 'error',\n      message: message,\n      timeout: 3000,\n    });\n  }\n\n  showQuickTapFeedback(message) {\n    this.updateUIElement('quick-tap-feedback', {\n      message: message,\n      timeout: 1500,\n    });\n  }\n\n  formatEventMessage(event) {\n    const playerName = event.player?.name || 'Player';\n    switch (event.type) {\n      case 'score':\n        return `${playerName} scored ${event.points} points`;\n      case 'assist':\n        return `${playerName} assist recorded`;\n      case 'rebound':\n        return `${playerName} rebound recorded`;\n      case 'steal':\n        return `${playerName} steal recorded`;\n      default:\n        return `${playerName} ${event.type} recorded`;\n    }\n  }\n\n  updateUIElement(elementId, data) {\n    // This would update the actual UI elements\n    // Implementation depends on your UI framework\n    console.log(`UI Update - ${elementId}:`, data);\n  }\n\n  updateGameDisplay() {\n    // Update the game display with current stats and events\n    this.updateUIElement('game-stats', this.quickStats);\n    this.updateUIElement('game-score', {\n      home: this.gameSession?.homeScore || 0,\n      away: this.gameSession?.awayScore || 0,\n    });\n    this.updateUIElement('recent-events', this.gameEvents.slice(-5));\n  }\n\n  // Game management\n  endQuarter() {\n    this.gameSession.quarter += 1;\n    this.gameSession.timeRemaining = '12:00';\n\n    const event = {\n      id: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      type: 'quarter_end',\n      quarter: this.gameSession.quarter - 1,\n    };\n\n    this.gameEvents.push(event);\n    this.updateGameDisplay();\n  }\n\n  endGame() {\n    this.gameSession.isLive = false;\n    this.gameSession.endTime = new Date().toISOString();\n\n    const finalStats = {\n      ...this.quickStats,\n      gameId: this.gameSession.id,\n      opponent: this.gameSession.opponent,\n      result: this.getGameResult(),\n      playTime: this.calculatePlayTime(),\n    };\n\n    return {\n      gameSession: this.gameSession,\n      playerStats: finalStats,\n      events: this.gameEvents,\n    };\n  }\n\n  getGameResult() {\n    const playerTeamScore =\n      this.gameSession.playerTeam === 'home'\n        ? this.gameSession.homeScore\n        : this.gameSession.awayScore;\n    const opponentScore =\n      this.gameSession.playerTeam === 'home'\n        ? this.gameSession.awayScore\n        : this.gameSession.homeScore;\n\n    return playerTeamScore > opponentScore ? 'W' : 'L';\n  }\n\n  calculatePlayTime() {\n    // Estimate play time based on events and quarters played\n    const quarterMinutes = Math.min(this.gameSession.quarter, 4) * 8; // 8-minute quarters\n    const eventBasedTime = Math.min(\n      this.gameEvents.length * 0.5,\n      quarterMinutes\n    );\n    return Math.round(eventBasedTime);\n  }\n\n  // Utility methods\n  resetQuickStats() {\n    Object.keys(this.quickStats).forEach(key => {\n      this.quickStats[key] = 0;\n    });\n  }\n\n  generateGameId() {\n    return 'game_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n  }\n\n  generateEventId() {\n    return (\n      'event_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9)\n    );\n  }\n\n  setCurrentPlayer(playerId) {\n    this.currentPlayer = playerId;\n    this.resetQuickStats();\n  }\n\n  getGameStats() {\n    return {\n      session: this.gameSession,\n      currentStats: this.quickStats,\n      events: this.gameEvents,\n      eventCount: this.gameEvents.length,\n    };\n  }\n}\n\n// Export for ES modules\nexport { SmartGameInput };\n\n// Also make available globally for backward compatibility\nif (typeof window !== 'undefined') {\n  window.SmartGameInput = SmartGameInput;\n}\n"],"names":["SmartGameInput","SpeechRecognition","event","gameInfo","results","lastResult","transcript","command","patterns","processed","type","pattern","match","playerName","player","shotType","points","assistedPlayer","p","message","elementId","data","finalStats","playerTeamScore","opponentScore","quarterMinutes","eventBasedTime","key","playerId"],"mappings":"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"}