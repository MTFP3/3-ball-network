<!doctype html>
<html lang="en">
  <head>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link rel="dns-prefetch" href="https://www.gstatic.com" />
    <link rel="dns-prefetch" href="https://firebaseapp.com" />
    <meta name="referrer" content="strict-origin-when-cross-origin" />
    <meta name="format-detection" content="telephone=no" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link rel="dns-prefetch" href="https://www.gstatic.com" />
    <link rel="dns-prefetch" href="https://firebaseapp.com" />
    <meta name="referrer" content="strict-origin-when-cross-origin" />
    <meta name="format-detection" content="telephone=no" />
    <meta charset="UTF-8" />
    <meta
      http-equiv="Content-Security-Policy"
      content="default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.gstatic.com https://www.googleapis.com https://apis.google.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://firestore.googleapis.com https://identitytoolkit.googleapis.com; frame-src 'self' https://www.google.com"
    />
    <meta http-equiv="X-Content-Type-Options" content="nosniff" />
    <meta http-equiv="X-Frame-Options" content="DENY" />
    <meta http-equiv="X-XSS-Protection" content="1; mode=block" />
    <meta
      http-equiv="Referrer-Policy"
      content="strict-origin-when-cross-origin"
    />
    <meta
      http-equiv="Permissions-Policy"
      content="geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=(), speaker=()"
    />
    <meta
      http-equiv="Strict-Transport-Security"
      content="max-age=31536000; includeSubDomains"
    />
    <!-- Security Headers -->
    <meta
      http-equiv="Content-Security-Policy"
      content="default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.gstatic.com https://www.googleapis.com https://apis.google.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://firestore.googleapis.com https://identitytoolkit.googleapis.com; frame-src 'self' https://www.google.com"
    />
    <meta http-equiv="X-Content-Type-Options" content="nosniff" />
    <meta http-equiv="X-Frame-Options" content="DENY" />
    <meta http-equiv="X-XSS-Protection" content="1; mode=block" />
    <meta
      http-equiv="Referrer-Policy"
      content="strict-origin-when-cross-origin"
    />
    <meta
      http-equiv="Permissions-Policy"
      content="geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=(), speaker=()"
    />
    <meta
      http-equiv="Strict-Transport-Security"
      content="max-age=31536000; includeSubDomains"
    />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Scout Portal | 3 Ball Network</title>
    <meta
      name="description"
      content="Scout portal for 3 Ball Network - analyze players, create reports, and manage recruitment"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Montserrat:wght@700;900&family=Urbanist:wght@400;700;900&family=Bebas+Neue&display=swap"
      rel="stylesheet"
    />

    <style>
      body {
        font-family: 'Urbanist', 'Montserrat', Arial, sans-serif;
        margin: 0;
        background: linear-gradient(135deg, #007cba 0%, #00b4d8 100%);
        color: #222;
        min-height: 100vh;
        overflow-x: hidden;
        letter-spacing: 0.02em;
      }

      .banner-logo {
        width: 100vw;
        background: #111;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 1.5em 0 1em 0;
        margin: 0;
      }

      .banner-logo-img {
        max-width: 320px;
        width: 90vw;
        height: auto;
        display: block;
        filter: drop-shadow(0 8px 32px rgba(0, 0, 0, 0.18));
        border-radius: 24px;
        background: none;
        padding: 0.5em 1.5em;
        box-shadow: 0 2px 16px rgba(0, 0, 0, 0.1);
        border: none;
      }

      @media (max-width: 700px) {
        .banner-logo-img {
          max-width: 90vw;
          padding: 0.5em;
        }
        .banner-logo {
          padding: 1em 0 0.5em 0;
        }
      }

      header {
        background: transparent;
        text-align: center;
        padding: 3em 1em 1.5em 1em;
        position: relative;
      }

      .site-title {
        font-family: 'Montserrat', 'Urbanist', Arial, sans-serif;
        font-size: 3em;
        font-weight: 900;
        letter-spacing: 3px;
        color: #fff;
        margin: 0.2em 0 0.1em 0;
        text-shadow: 0 6px 24px rgba(0, 0, 0, 0.18);
        text-transform: uppercase;
      }

      .site-tagline {
        font-family: 'Urbanist', Arial, sans-serif;
        color: #e0fbfc;
        font-size: 1.35em;
        margin-bottom: 0.7em;
        letter-spacing: 1.5px;
        font-weight: 700;
        text-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
      }

      nav {
        background: rgba(255, 255, 255, 0.98);
        padding: 1.1em 0;
        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.04);
        text-align: center;
        border-radius: 0 0 22px 22px;
        margin: 0 auto 2em auto;
        max-width: 720px;
        font-size: 1.18em;
        font-family: 'Montserrat', Arial, sans-serif;
      }

      nav a {
        margin: 0 1.5em;
        color: #007cba;
        text-decoration: none;
        font-weight: 900;
        letter-spacing: 0.5px;
        transition: color 0.2s;
        position: relative;
        text-transform: uppercase;
      }

      nav a::after {
        content: '';
        display: block;
        width: 0;
        height: 2.5px;
        background: linear-gradient(90deg, #00b4d8 0%, #007cba 100%);
        transition: width 0.3s;
        margin: 0 auto;
        border-radius: 2px;
      }

      nav a:hover {
        color: #00b4d8;
      }

      nav a:hover::after {
        width: 100%;
      }

      main {
        width: 100vw;
        max-width: 100%;
        box-sizing: border-box;
        padding: 20px;
        margin: 0;
      }

      section {
        background: rgba(255, 255, 255, 0.95);
        margin: 20px auto;
        padding: 20px;
        border-radius: 12px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        max-width: 900px;
      }

      h1,
      h2,
      h3 {
        font-family: 'Bebas Neue', 'Montserrat', Arial, sans-serif;
        letter-spacing: 2px;
        text-transform: uppercase;
        margin-bottom: 0.3em;
        color: #007cba;
      }

      h1 {
        font-size: 2.5rem;
        text-align: center;
        margin-bottom: 1em;
      }

      h3 {
        font-size: 1.5rem;
        border-bottom: 2px solid #00b4d8;
        padding-bottom: 0.5em;
        margin-bottom: 1em;
      }

      input,
      button {
        padding: 0.8em 1em;
        margin: 0.5em;
        border: 2px solid #ddd;
        border-radius: 8px;
        font-family: 'Urbanist', Arial, sans-serif;
        font-size: 1em;
      }

      button {
        background: #00b4d8;
        color: #fff;
        border: none;
        cursor: pointer;
        font-weight: 700;
        transition: all 0.3s;
        text-transform: uppercase;
        letter-spacing: 1px;
      }

      button:hover {
        background: #007cba;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0, 180, 216, 0.3);
      }

      input:focus {
        outline: none;
        border-color: #00b4d8;
        box-shadow: 0 0 0 3px rgba(0, 180, 216, 0.1);
      }

      #reportList,
      #comparisonResults,
      #teamComparisonResults {
        margin-top: 1.5em;
        padding: 1em;
        background: #f8f9fa;
        border-radius: 8px;
        border: 1px solid #e0e0e0;
      }

      #smartTags {
        list-style: none;
        padding: 0;
        display: flex;
        flex-wrap: wrap;
        gap: 0.5em;
      }

      #smartTags li {
        background: #00b4d8;
        color: #fff;
        padding: 0.5em 1em;
        border-radius: 20px;
        font-size: 0.9em;
        font-weight: 700;
      }

      footer {
        padding: 40px 20px;
        background-color: #111;
        color: #fff;
        text-align: center;
        font-size: 1.1em;
        letter-spacing: 1px;
        margin-top: 3em;
      }

      @media (max-width: 768px) {
        .site-title {
          font-size: 2em;
        }

        nav a {
          margin: 0 0.8em;
          font-size: 0.9em;
        }

        section {
          margin: 15px;
          padding: 15px;
        }

        input,
        button {
          width: 100%;
          margin: 0.3em 0;
        }
      }
    </style>
    <link
      rel="modulepreload"
      crossorigin
    />
    <link
      rel="modulepreload"
      crossorigin
    />
    <link
      rel="modulepreload"
      crossorigin
    />
    <link
      rel="modulepreload"
      crossorigin
    />
    <link
      rel="modulepreload"
      crossorigin
    />
    <link
      rel="modulepreload"
      crossorigin
    />
    <link
      rel="modulepreload"
      crossorigin
      href="/assets/js/teamComparison-DkPk5Wsi-DTB9EFa3-P9lX6k0K-DNi_jEUI-P9lX6k0K-DNi_jEUI-P9lX6k0K-DNi_jEUI-P9lX6k0K-DNi_jEUI-P9lX6k0K-DNi_jEUI-P9lX6k0K-DNi_jEUI-P9lX6k0K-DNi_jEUI-DAPzmdju.js"
    />
    <script
      type="module"
      crossorigin
      src="/assets/js/scout-DtOGAsOc.js"
    ></script>
    <link
      rel="modulepreload"
      crossorigin
    />
    <link
      rel="modulepreload"
      crossorigin
    />
    <link
      rel="modulepreload"
      crossorigin
    />
    <link
      rel="modulepreload"
      crossorigin
      href="/assets/js/teamComparison-DkPk5Wsi-DTB9EFa3-P9lX6k0K-DNi_jEUI-P9lX6k0K-DNi_jEUI-P9lX6k0K-DNi_jEUI-P9lX6k0K-DNi_jEUI-P9lX6k0K-DNi_jEUI-P9lX6k0K-DNi_jEUI-P9lX6k0K-DNi_jEUI-P9lX6k0K.js"
    />
    <link rel="stylesheet" crossorigin href="/assets/css/index.css" />
  <script src="/assets/js/securityFixesComprehensive.js"></script></head>
  <body>
    <div class="banner-logo">
      <img src="/logo.png" alt="3 Ball Network Logo" class="banner-logo-img" />
    </div>

    <header>
      <div class="site-title">3 Ball Network</div>
      <div class="site-tagline">Scout Portal</div>
    </header>

    <nav>
      <a href="/">Home</a>
      <a href="/about.html">About Us</a>
      <a href="/overview.html">Overview</a>
      <a href="/register.html">Register</a>
      <a href="/login.html">Log In</a>
    </nav>

    <main>
      <h1>🏀 Scout Dashboard</h1>
      <section>
        <h3>📄 Search Scouting Reports</h3>
        <input id="searchPlayerId" placeholder="Player ID" /><input
          id="searchGameId"
          placeholder="Game ID"
        /><button >🔍 Search</button>
        <div id="reportList"></div>
      </section>
      <section>
        <h3>📊 Compare Players</h3>
        <input id="compareP1" placeholder="Player ID 1" /><input
          id="compareP2"
          placeholder="Player ID 2"
        /><button >Compare</button>
        <div id="comparisonResults"></div>
      </section>
      <section>
        <h3>🏆 Team Comparison Tool</h3>
        <input id="teamOne" placeholder="Team Name 1" /><input
          id="teamTwo"
          placeholder="Team Name 2"
        /><button >Compare</button>
        <div id="teamComparisonResults"></div>
      </section>
      <section>
        <h3>🏷️ Smart Tags</h3>
        <ul id="smartTags"></ul>
      </section>
    </main>

    <footer>
      Built by hoopers. Built for hoopers. Built for what's next.<br />
      © 2025 The 3 Ball Network
    </footer>

    <script>
      // Performance monitoring for 3 Ball Network
      (function () {
        'use strict'; // Track Core Web Vitals function trackWebVitals() { // Largest Contentful Paint new PerformanceObserver((list) => { const entries = list.getEntries(); const lastEntry = entries[entries.length - 1]; console.log('LCP:', lastEntry.startTime); // Send to analytics if needed if (typeof gtag !== 'undefined') { gtag('event', 'web_vitals', { event_category: 'Performance', event_label: 'LCP', value: Math.round(lastEntry.startTime) }); } }).observe({ type: 'largest-contentful-paint', buffered: true }); // Cumulative Layout Shift new PerformanceObserver((list) => { let clsValue = 0; for (const entry of list.getEntries()) { if (!entry.hadRecentInput) { clsValue += entry.value; } } console.log('CLS:', clsValue); if (typeof gtag !== 'undefined') { gtag('event', 'web_vitals', { event_category: 'Performance', event_label: 'CLS', value: Math.round(clsValue * 1000) }); } }).observe({ type: 'layout-shift', buffered: true }); // First Input Delay new PerformanceObserver((list) => { const firstInput = list.getEntries()[0]; console.log('FID:', firstInput.processingStart - firstInput.startTime); if (typeof gtag !== 'undefined') { gtag('event', 'web_vitals', { event_category: 'Performance', event_label: 'FID', value: Math.round(firstInput.processingStart - firstInput.startTime) }); } }).observe({ type: 'first-input', buffered: true }); } // Track page load times function trackPageLoad() { window.addEventListener('load', () => { const loadTime = performance.timing.loadEventEnd - performance.timing.navigationStart; console.log('Page Load Time:', loadTime + 'ms'); const perfData = { loadTime, domContentLoaded: performance.timing.domContentLoadedEventEnd - performance.timing.navigationStart, firstPaint: performance.getEntriesByType('paint')[0]?.startTime || 0, firstContentfulPaint: performance.getEntriesByType('paint')[1]?.startTime || 0 }; // Store in localStorage for admin dashboard localStorage.setItem('pagePerformance', JSON.stringify(perfData)); }); } // Track resource loading function trackResourceLoading() { const observer = new PerformanceObserver((list) => { for (const entry of list.getEntries()) { if (entry.duration > 1000) { // Slow resources > 1s console.warn('Slow resource:', entry.name, entry.duration + 'ms'); } } }); observer.observe({ type: 'resource', buffered: true }); } // Initialize monitoring if (document.readyState === 'loading') { document.addEventListener('DOMContentLoaded', () => { trackWebVitals(); trackPageLoad(); trackResourceLoading(); }); } else { trackWebVitals(); trackPageLoad(); trackResourceLoading(); }
      })();
    </script>
    <script>
      // Accessibility enhancements
      (function () {
        'use strict'; // Add focus management function enhanceFocus() { // Skip to main content link const skipLink = document.createElement('a'); skipLink.href = '#main-content'; skipLink.textContent = 'Skip to main content'; skipLink.className = 'skip-link'; skipLink.style.cssText = 'position:absolute;top:-40px;left:0;background:#00b4d8;color:#fff;padding:8px;text-decoration:none;z-index:1000'; skipLink.addEventListener('focus', () => { skipLink.style.top = '0'; }); skipLink.addEventListener('blur', () => { skipLink.style.top = '-40px'; }); document.body.insertBefore(skipLink, document.body.firstChild); // Add main content landmark const mainContent = document.querySelector('main') || document.querySelector('.main-content'); if (mainContent) { mainContent.id = 'main-content'; mainContent.setAttribute('tabindex', '-1'); } } // Add ARIA labels and descriptions function enhanceARIA() { // Add ARIA labels to buttons without text const buttons = document.querySelectorAll('button:not([aria-label])'); buttons.forEach(button => { const text = button.textContent || button.innerHTML; if (text.trim() && !button.getAttribute('aria-label')) { button.setAttribute('aria-label', text.trim()); } }); // Add ARIA labels to form inputs const inputs = document.querySelectorAll('input:not([aria-label]):not([id])'); inputs.forEach(input => { const placeholder = input.getAttribute('placeholder'); if (placeholder) { input.setAttribute('aria-label', placeholder); } }); // Add role to navigation const navs = document.querySelectorAll('nav:not([role])'); navs.forEach(nav => { nav.setAttribute('role', 'navigation'); }); } // Add keyboard navigation function enhanceKeyboardNavigation() { // Add keyboard shortcuts document.addEventListener('keydown', (e) => { // Alt + M for main menu if (e.altKey && e.key === 'm') { e.preventDefault(); const menu = document.querySelector('.menu, .navigation, nav'); if (menu) menu.focus(); } // Alt + S for search if (e.altKey && e.key === 's') { e.preventDefault(); const search = document.querySelector('input[type="search"], .search-input'); if (search) search.focus(); } // Escape to close modals if (e.key === 'Escape') { const modals = document.querySelectorAll('.modal.active, .popup.active'); modals.forEach(modal => { modal.classList.remove('active'); }); } }); } // Add screen reader announcements function addScreenReaderSupport() { // Create announcement region const announcer = document.createElement('div'); announcer.id = 'screen-reader-announcer'; announcer.setAttribute('aria-live', 'polite'); announcer.setAttribute('aria-atomic', 'true'); announcer.style.cssText = 'position:absolute;left:-10000px;width:1px;height:1px;overflow:hidden'; document.body.appendChild(announcer); // Function to announce messages window.announceToScreenReader = function(message) { announcer.textContent = message; setTimeout(() => { announcer.textContent = ''; }, 1000); }; } // Initialize accessibility features if (document.readyState === 'loading') { document.addEventListener('DOMContentLoaded', () => { enhanceFocus(); enhanceARIA(); enhanceKeyboardNavigation(); addScreenReaderSupport(); }); } else { enhanceFocus(); enhanceARIA(); enhanceKeyboardNavigation(); addScreenReaderSupport(); }
      })();
    </script>
    <script>
      // Enhanced error handling
      (function () {
        'use strict'; // Global error handler window.addEventListener('error', (e) => { console.error('Global error:', e.error); showUserFriendlyError('Something went wrong. Please try again.'); }); // Unhandled promise rejection handler window.addEventListener('unhandledrejection', (e) => { console.error('Unhandled promise rejection:', e.reason); showUserFriendlyError('Network error. Please check your connection.'); }); // Show user-friendly error messages function showUserFriendlyError(message) { const errorDiv = document.createElement('div'); errorDiv.className = 'error-message'; errorDiv.style.cssText = 'position:fixed;top:20px;right:20px;background:#ff4444;color:#fff;padding:15px;border-radius:8px;z-index:10000;max-width:300px;box-shadow:0 2px 10px rgba(0,0,0,0.2)'; errorDiv.textContent = message + '<button data-action="close-message" style="background:none;border:none;color:#fff;float:right;font-size:16px;cursor:pointer">×</button>'; document.body.appendChild(errorDiv); // Auto-remove after 5 seconds setTimeout(() => { if (errorDiv.parentNode) { errorDiv.parentNode.removeChild(errorDiv); } }, 5000); } // Form validation function enhanceFormValidation() { const forms = document.querySelectorAll('form'); forms.forEach(form => { form.addEventListener('submit', (e) => { const inputs = form.querySelectorAll('input[required], textarea[required]'); let hasErrors = false; inputs.forEach(input => { if (!input.value.trim()) { hasErrors = true; input.style.borderColor = '#ff4444'; input.setAttribute('aria-invalid', 'true'); } else { input.style.borderColor = ''; input.setAttribute('aria-invalid', 'false'); } }); if (hasErrors) { e.preventDefault(); showUserFriendlyError('Please fill in all required fields.'); } }); }); } // Network status monitoring function monitorNetworkStatus() { function updateNetworkStatus() { if (!navigator.onLine) { showUserFriendlyError('You are offline. Some features may not work.'); } } window.addEventListener('online', () => { showUserFriendlyError('Connection restored!'); }); window.addEventListener('offline', updateNetworkStatus); // Check initial status updateNetworkStatus(); } // Initialize error handling if (document.readyState === 'loading') { document.addEventListener('DOMContentLoaded', () => { enhanceFormValidation(); monitorNetworkStatus(); }); } else { enhanceFormValidation(); monitorNetworkStatus(); } // Export function for use in other scripts window.showUserFriendlyError = showUserFriendlyError;
      })();
    </script>
  </body>
</html>
